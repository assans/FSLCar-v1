###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        26/Oct/2014  17:07:01
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\Freescale Code\FSLCar v1\project\MyCar\app\MyCar.c
#    Command line =  
#        "H:\Freescale Code\FSLCar v1\project\MyCar\app\MyCar.c" -D LPLD_K60
#        -lCN "H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\List\" -lB
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\List\" -o
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "H:\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\app\" -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\CPU\" -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\common\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\HW\" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\DEV\"
#        -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\uCOS-II\Ports\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\FatFs\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\FatFs\option\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\USB\common\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\USB\driver\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\USB\descriptor\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\USB\class\" -Ol -I "H:\Embedded
#        Workbench 7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\List\MyCar.lst
#    Object file  =  
#        H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\Obj\MyCar.o
#
###############################################################################

H:\Freescale Code\FSLCar v1\project\MyCar\app\MyCar.c
      1          #include "common.h"
      2          //#include "DataScope_DP.h"
      3          #include "Init.h"
      4          #include "Kalman.h"
      5          #include "angget.h"

   \                                 In section .data, align 4
      6          uint8 OUTPUT_DATA[] = { 0x03, 0xFC, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 0xFC,0x03 };
   \                     OUTPUT_DATA:
   \   00000000   0x03 0xFC          DC8 3, 252, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 252, 3
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0xFC 0x03    

   \                                 In section .data, align 4
      7          uint8 AllData[] = { 0x03, 0xFC, 0, 0, 0, 0, 1, 0xFC, 0x03 };
   \                     AllData:
   \   00000000   0x03 0xFC          DC8 3, 252, 0, 0, 0, 0, 1, 252, 3, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0xFC    
   \              0x03 0x00    
   \              0x00 0x00    

   \                                 In section .bss, align 1
      8          uint8 ang, gyro, x, y, z;
   \                     ang:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     gyro:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     x:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     y:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     z:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
      9          int GyroZero = 0; //陀螺仪零点
   \                     GyroZero:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     10          int GravityZero = 0; //重力Z轴零点
   \                     GravityZero:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     11          float CarAngle, CarAngSpeed, x_f;
   \                     CarAngle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     CarAngSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     x_f:
   \   00000000                      DS8 4
     12          #define mode 1
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void ADC_GET(void)
     15          {
   \                     ADC_GET: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     16          	if (mode)
     17          	{
     18          		AngleGet();
   \   00000002   0x.... 0x....      BL       AngleGet
     19          		Float2Byte(&CarAngle, OUTPUT_DATA, 2);
   \   00000006   0x2202             MOVS     R2,#+2
   \   00000008   0x....             LDR.N    R1,??DataTable1
   \   0000000A   0x....             LDR.N    R0,??DataTable1_1
   \   0000000C   0x.... 0x....      BL       Float2Byte
     20          		Float2Byte(&CarAngSpeed, OUTPUT_DATA, 6);
   \   00000010   0x2206             MOVS     R2,#+6
   \   00000012   0x....             LDR.N    R1,??DataTable1
   \   00000014   0x....             LDR.N    R0,??DataTable1_2
   \   00000016   0x.... 0x....      BL       Float2Byte
     21          		Float2Byte(&x_f, OUTPUT_DATA, 10);
   \   0000001A   0x220A             MOVS     R2,#+10
   \   0000001C   0x....             LDR.N    R1,??DataTable1
   \   0000001E   0x....             LDR.N    R0,??DataTable1_3
   \   00000020   0x.... 0x....      BL       Float2Byte
     22          	}
     23          	else
     24          	{
     25          		y = u32_trans_U8(LPLD_ADC_Get(ADC1, AD11));
     26          		x = u32_trans_U8(LPLD_ADC_Get(ADC1, AD10));
     27          		z = u32_trans_U8(LPLD_ADC_Get(ADC1, AD12));
     28          		ang = u32_trans_U8(LPLD_ADC_Get(ADC1, AD13));
     29          		gyro = u32_trans_U8(LPLD_ADC_Get(ADC1, AD14));
     30          		AllData[2] = x;
     31          		AllData[3] = y;
     32          		AllData[4] = z;
     33          		AllData[5] = gyro;
     34          		AllData[6] = ang;
     35          	}
     36          }
   \   00000024   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     37          void main(void)
     38          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     39          	CarInit();
   \   00000002   0x.... 0x....      BL       CarInit
     40          	//GyroZero = GyroScopeGetZero();
     41          	//GravityZero=GravityGetZero();
     42          	while (1)
     43          	{
     44          		LPLD_GPIO_Toggle_b(PTA, 17);
   \                     ??main_0: (+1)
   \   00000006   0x2111             MOVS     R1,#+17
   \   00000008   0x....             LDR.N    R0,??DataTable1_4  ;; 0x400ff000
   \   0000000A   0x.... 0x....      BL       LPLD_GPIO_Toggle_b
     45          		LPLD_SYSTICK_DelayMs(50);
   \   0000000E   0x2032             MOVS     R0,#+50
   \   00000010   0x.... 0x....      BL       LPLD_SYSTICK_DelayMs
     46          		ADC_GET();
   \   00000014   0x.... 0x....      BL       ADC_GET
     47          		if (mode)
     48          		{
     49          			LPLD_UART_PutCharArr(UART5, OUTPUT_DATA, 16);
   \   00000018   0x2210             MOVS     R2,#+16
   \   0000001A   0x....             LDR.N    R1,??DataTable1
   \   0000001C   0x....             LDR.N    R0,??DataTable1_5  ;; 0x400eb000
   \   0000001E   0x.... 0x....      BL       LPLD_UART_PutCharArr
   \   00000022   0xE7F0             B.N      ??main_0
     50          		}
     51          		else
     52          		{
     53          			LPLD_UART_PutCharArr(UART5, AllData, 9);
     54          		}
     55          
     56          	}
     57          }
     58          

   \                                 In section .text, align 2, keep-with-next
     59          void PIT0_ISR(void)
     60          {
     61          
     62          }
   \                     PIT0_ISR: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     OUTPUT_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     CarAngle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     CarAngSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     x_f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x400EB000         DC32     0x400eb000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ADC_GET
         8   -> AngleGet
         8   -> Float2Byte
       0   PIT0_ISR
       8   main
         8   -> ADC_GET
         8   -> CarInit
         8   -> LPLD_GPIO_Toggle_b
         8   -> LPLD_SYSTICK_DelayMs
         8   -> LPLD_UART_PutCharArr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
      38  ADC_GET
      12  AllData
       4  CarAngSpeed
       4  CarAngle
       4  GravityZero
       4  GyroZero
      16  OUTPUT_DATA
       2  PIT0_ISR
       1  ang
       1  gyro
      36  main
       1  x
       4  x_f
       1  y
       1  z

 
  25 bytes in section .bss
  28 bytes in section .data
 100 bytes in section .text
 
 100 bytes of CODE memory
  53 bytes of DATA memory

Errors: none
Warnings: 2

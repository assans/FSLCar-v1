###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        25/Oct/2014  14:33:15
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\Freescale Code\FSLCar v1\project\MyCar\app\DataScope_DP.C
#    Command line =  
#        "H:\Freescale Code\FSLCar v1\project\MyCar\app\DataScope_DP.C" -D
#        LPLD_K60 -lCN "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\FLASH\List\" -lB "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\FLASH\List\" -o "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "H:\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\app\" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\CPU\" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\common\"
#        -I "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\"
#        -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\LPLD\HW\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\DEV\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\uCOS-II\Ports\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\FatFs\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\FatFs\option\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\USB\common\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\USB\driver\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\USB\descriptor\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\USB\class\" -Ol -I "H:\Embedded
#        Workbench 7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\FLASH\List\DataScope_DP.lst
#    Object file  =  
#        H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\Obj\DataScope_DP.o
#
###############################################################################

H:\Freescale Code\FSLCar v1\project\MyCar\app\DataScope_DP.C
      1           
      2          #include "DataScope_DP.h"
      3           

   \                                 In section .bss, align 4
      4          unsigned char DataScope_OutPut_Buffer[42] = {0};	   //串口发送缓冲区
   \                     DataScope_OutPut_Buffer:
   \   00000000                      DS8 44
      5          
      6          
      7          //函数说明：将单精度浮点数据转成4字节数据并存入指定地址 
      8          //附加说明：用户无需直接操作此函数 
      9          //target:目标单精度数据
     10          //buf:待写入数组
     11          //beg:指定从数组第几个元素开始写入
     12          //函数无返回 

   \                                 In section .text, align 2, keep-with-next
     13          void Float2Byte(float *target,unsigned char *buf,unsigned char beg)
     14          {
   \                     Float2Byte: (+1)
   \   00000000   0xB410             PUSH     {R4}
     15              unsigned char *point;
     16              point = (unsigned char*)target;	  //得到float的地址
     17              buf[beg]   = point[0];
   \   00000002   0x7803             LDRB     R3,[R0, #+0]
   \   00000004   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000006   0x5453             STRB     R3,[R2, R1]
     18              buf[beg+1] = point[1];
   \   00000008   0x7843             LDRB     R3,[R0, #+1]
   \   0000000A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000C   0x1854             ADDS     R4,R2,R1
   \   0000000E   0x7063             STRB     R3,[R4, #+1]
     19              buf[beg+2] = point[2];
   \   00000010   0x7883             LDRB     R3,[R0, #+2]
   \   00000012   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000014   0x1854             ADDS     R4,R2,R1
   \   00000016   0x70A3             STRB     R3,[R4, #+2]
     20              buf[beg+3] = point[3];
   \   00000018   0x78C0             LDRB     R0,[R0, #+3]
   \   0000001A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000001C   0x1851             ADDS     R1,R2,R1
   \   0000001E   0x70C8             STRB     R0,[R1, #+3]
     21          }
   \   00000020   0xBC10             POP      {R4}
   \   00000022   0x4770             BX       LR               ;; return
     22           
     23           
     24          //函数说明：将待发送通道的单精度浮点数据写入发送缓冲区
     25          //Data：通道数据
     26          //Channel：选择通道（1-10）
     27          //函数无返回 

   \                                 In section .text, align 2, keep-with-next
     28          void DataScope_Get_Channel_Data(float Data,unsigned char Channel)
     29          {
   \                     DataScope_Get_Channel_Data: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
     30          	if ( (Channel > 10) || (Channel == 0) ) return;  //通道个数大于10或等于0，直接跳出，不执行函数
   \   00000002   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000004   0x290B             CMP      R1,#+11
   \   00000006   0xDA02             BGE.N    ??DataScope_Get_Channel_Data_0
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x2900             CMP      R1,#+0
   \   0000000C   0xD100             BNE.N    ??DataScope_Get_Channel_Data_1
   \                     ??DataScope_Get_Channel_Data_0: (+1)
   \   0000000E   0xE04D             B.N      ??DataScope_Get_Channel_Data_2
     31            else
     32            {
     33               switch (Channel)
   \                     ??DataScope_Get_Channel_Data_1: (+1)
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x2901             CMP      R1,#+1
   \   00000014   0xD00F             BEQ.N    ??DataScope_Get_Channel_Data_3
   \   00000016   0xD349             BCC.N    ??DataScope_Get_Channel_Data_4
   \   00000018   0x2903             CMP      R1,#+3
   \   0000001A   0xD018             BEQ.N    ??DataScope_Get_Channel_Data_5
   \   0000001C   0xD311             BCC.N    ??DataScope_Get_Channel_Data_6
   \   0000001E   0x2905             CMP      R1,#+5
   \   00000020   0xD021             BEQ.N    ??DataScope_Get_Channel_Data_7
   \   00000022   0xD31A             BCC.N    ??DataScope_Get_Channel_Data_8
   \   00000024   0x2907             CMP      R1,#+7
   \   00000026   0xD02A             BEQ.N    ??DataScope_Get_Channel_Data_9
   \   00000028   0xD323             BCC.N    ??DataScope_Get_Channel_Data_10
   \   0000002A   0x2909             CMP      R1,#+9
   \   0000002C   0xD033             BEQ.N    ??DataScope_Get_Channel_Data_11
   \   0000002E   0xD32C             BCC.N    ??DataScope_Get_Channel_Data_12
   \   00000030   0x290A             CMP      R1,#+10
   \   00000032   0xD036             BEQ.N    ??DataScope_Get_Channel_Data_13
   \   00000034   0xE03A             B.N      ??DataScope_Get_Channel_Data_4
     34          		{
     35                case 1:  Float2Byte(&Data,DataScope_OutPut_Buffer,1); break;
   \                     ??DataScope_Get_Channel_Data_3: (+1)
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable1
   \   0000003A   0xA800             ADD      R0,SP,#+0
   \   0000003C   0x.... 0x....      BL       Float2Byte
   \   00000040   0xE034             B.N      ??DataScope_Get_Channel_Data_4
     36                case 2:  Float2Byte(&Data,DataScope_OutPut_Buffer,5); break;
   \                     ??DataScope_Get_Channel_Data_6: (+1)
   \   00000042   0x2205             MOVS     R2,#+5
   \   00000044   0x....             LDR.N    R1,??DataTable1
   \   00000046   0xA800             ADD      R0,SP,#+0
   \   00000048   0x.... 0x....      BL       Float2Byte
   \   0000004C   0xE02E             B.N      ??DataScope_Get_Channel_Data_4
     37          		  case 3:  Float2Byte(&Data,DataScope_OutPut_Buffer,9); break;
   \                     ??DataScope_Get_Channel_Data_5: (+1)
   \   0000004E   0x2209             MOVS     R2,#+9
   \   00000050   0x....             LDR.N    R1,??DataTable1
   \   00000052   0xA800             ADD      R0,SP,#+0
   \   00000054   0x.... 0x....      BL       Float2Byte
   \   00000058   0xE028             B.N      ??DataScope_Get_Channel_Data_4
     38          		  case 4:  Float2Byte(&Data,DataScope_OutPut_Buffer,13); break;
   \                     ??DataScope_Get_Channel_Data_8: (+1)
   \   0000005A   0x220D             MOVS     R2,#+13
   \   0000005C   0x....             LDR.N    R1,??DataTable1
   \   0000005E   0xA800             ADD      R0,SP,#+0
   \   00000060   0x.... 0x....      BL       Float2Byte
   \   00000064   0xE022             B.N      ??DataScope_Get_Channel_Data_4
     39          		  case 5:  Float2Byte(&Data,DataScope_OutPut_Buffer,17); break;
   \                     ??DataScope_Get_Channel_Data_7: (+1)
   \   00000066   0x2211             MOVS     R2,#+17
   \   00000068   0x....             LDR.N    R1,??DataTable1
   \   0000006A   0xA800             ADD      R0,SP,#+0
   \   0000006C   0x.... 0x....      BL       Float2Byte
   \   00000070   0xE01C             B.N      ??DataScope_Get_Channel_Data_4
     40          		  case 6:  Float2Byte(&Data,DataScope_OutPut_Buffer,21); break;
   \                     ??DataScope_Get_Channel_Data_10: (+1)
   \   00000072   0x2215             MOVS     R2,#+21
   \   00000074   0x....             LDR.N    R1,??DataTable1
   \   00000076   0xA800             ADD      R0,SP,#+0
   \   00000078   0x.... 0x....      BL       Float2Byte
   \   0000007C   0xE016             B.N      ??DataScope_Get_Channel_Data_4
     41          		  case 7:  Float2Byte(&Data,DataScope_OutPut_Buffer,25); break;
   \                     ??DataScope_Get_Channel_Data_9: (+1)
   \   0000007E   0x2219             MOVS     R2,#+25
   \   00000080   0x....             LDR.N    R1,??DataTable1
   \   00000082   0xA800             ADD      R0,SP,#+0
   \   00000084   0x.... 0x....      BL       Float2Byte
   \   00000088   0xE010             B.N      ??DataScope_Get_Channel_Data_4
     42          		  case 8:  Float2Byte(&Data,DataScope_OutPut_Buffer,29); break;
   \                     ??DataScope_Get_Channel_Data_12: (+1)
   \   0000008A   0x221D             MOVS     R2,#+29
   \   0000008C   0x....             LDR.N    R1,??DataTable1
   \   0000008E   0xA800             ADD      R0,SP,#+0
   \   00000090   0x.... 0x....      BL       Float2Byte
   \   00000094   0xE00A             B.N      ??DataScope_Get_Channel_Data_4
     43          		  case 9:  Float2Byte(&Data,DataScope_OutPut_Buffer,33); break;
   \                     ??DataScope_Get_Channel_Data_11: (+1)
   \   00000096   0x2221             MOVS     R2,#+33
   \   00000098   0x....             LDR.N    R1,??DataTable1
   \   0000009A   0xA800             ADD      R0,SP,#+0
   \   0000009C   0x.... 0x....      BL       Float2Byte
   \   000000A0   0xE004             B.N      ??DataScope_Get_Channel_Data_4
     44          		  case 10: Float2Byte(&Data,DataScope_OutPut_Buffer,37); break;
   \                     ??DataScope_Get_Channel_Data_13: (+1)
   \   000000A2   0x2225             MOVS     R2,#+37
   \   000000A4   0x....             LDR.N    R1,??DataTable1
   \   000000A6   0xA800             ADD      R0,SP,#+0
   \   000000A8   0x.... 0x....      BL       Float2Byte
     45          		}
     46            }	 
     47          }
   \                     ??DataScope_Get_Channel_Data_4: (+1)
   \                     ??DataScope_Get_Channel_Data_2: (+1)
   \   000000AC   0xBD01             POP      {R0,PC}          ;; return
     48          
     49          
     50          //函数说明：生成 DataScopeV1.0 能正确识别的帧格式
     51          //Channel_Number，需要发送的通道个数
     52          //返回发送缓冲区数据个数
     53          //返回0表示帧格式生成失败 

   \                                 In section .text, align 2, keep-with-next
     54          unsigned char DataScope_Data_Generate(unsigned char Channel_Number)
     55          {
     56          	if ( (Channel_Number > 10) || (Channel_Number == 0) ) { return 0; }  //通道个数大于10或等于0，直接跳出，不执行函数
   \                     DataScope_Data_Generate: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x280B             CMP      R0,#+11
   \   00000004   0xDA02             BGE.N    ??DataScope_Data_Generate_0
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD101             BNE.N    ??DataScope_Data_Generate_1
   \                     ??DataScope_Data_Generate_0: (+1)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0xE04B             B.N      ??DataScope_Data_Generate_2
     57            else
     58            {	
     59          	 DataScope_OutPut_Buffer[0] = '$';  //帧头
   \                     ??DataScope_Data_Generate_1: (+1)
   \   00000010   0x2124             MOVS     R1,#+36
   \   00000012   0x....             LDR.N    R2,??DataTable1
   \   00000014   0x7011             STRB     R1,[R2, #+0]
     60          		
     61          	 switch(Channel_Number)   
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x2801             CMP      R0,#+1
   \   0000001A   0xD00F             BEQ.N    ??DataScope_Data_Generate_3
   \   0000001C   0xD343             BCC.N    ??DataScope_Data_Generate_4
   \   0000001E   0x2803             CMP      R0,#+3
   \   00000020   0xD016             BEQ.N    ??DataScope_Data_Generate_5
   \   00000022   0xD310             BCC.N    ??DataScope_Data_Generate_6
   \   00000024   0x2805             CMP      R0,#+5
   \   00000026   0xD01D             BEQ.N    ??DataScope_Data_Generate_7
   \   00000028   0xD317             BCC.N    ??DataScope_Data_Generate_8
   \   0000002A   0x2807             CMP      R0,#+7
   \   0000002C   0xD024             BEQ.N    ??DataScope_Data_Generate_9
   \   0000002E   0xD31E             BCC.N    ??DataScope_Data_Generate_10
   \   00000030   0x2809             CMP      R0,#+9
   \   00000032   0xD02C             BEQ.N    ??DataScope_Data_Generate_11
   \   00000034   0xD325             BCC.N    ??DataScope_Data_Generate_12
   \   00000036   0x280A             CMP      R0,#+10
   \   00000038   0xD02F             BEQ.N    ??DataScope_Data_Generate_13
   \   0000003A   0xE034             B.N      ??DataScope_Data_Generate_4
     62             { 
     63          		 case 1:   DataScope_OutPut_Buffer[5]  =  5; return  6; break;   
   \                     ??DataScope_Data_Generate_3: (+1)
   \   0000003C   0x2005             MOVS     R0,#+5
   \   0000003E   0x....             LDR.N    R1,??DataTable1
   \   00000040   0x7148             STRB     R0,[R1, #+5]
   \   00000042   0x2006             MOVS     R0,#+6
   \   00000044   0xE030             B.N      ??DataScope_Data_Generate_2
     64          		 case 2:   DataScope_OutPut_Buffer[9]  =  9; return 10; break;
   \                     ??DataScope_Data_Generate_6: (+1)
   \   00000046   0x2009             MOVS     R0,#+9
   \   00000048   0x....             LDR.N    R1,??DataTable1
   \   0000004A   0x7248             STRB     R0,[R1, #+9]
   \   0000004C   0x200A             MOVS     R0,#+10
   \   0000004E   0xE02B             B.N      ??DataScope_Data_Generate_2
     65          		 case 3:   DataScope_OutPut_Buffer[13] = 13; return 14; break;
   \                     ??DataScope_Data_Generate_5: (+1)
   \   00000050   0x200D             MOVS     R0,#+13
   \   00000052   0x....             LDR.N    R1,??DataTable1
   \   00000054   0x7348             STRB     R0,[R1, #+13]
   \   00000056   0x200E             MOVS     R0,#+14
   \   00000058   0xE026             B.N      ??DataScope_Data_Generate_2
     66          		 case 4:   DataScope_OutPut_Buffer[17] = 17; return 18; break;
   \                     ??DataScope_Data_Generate_8: (+1)
   \   0000005A   0x2011             MOVS     R0,#+17
   \   0000005C   0x....             LDR.N    R1,??DataTable1
   \   0000005E   0x7448             STRB     R0,[R1, #+17]
   \   00000060   0x2012             MOVS     R0,#+18
   \   00000062   0xE021             B.N      ??DataScope_Data_Generate_2
     67          		 case 5:   DataScope_OutPut_Buffer[21] = 21; return 22; break; 
   \                     ??DataScope_Data_Generate_7: (+1)
   \   00000064   0x2015             MOVS     R0,#+21
   \   00000066   0x....             LDR.N    R1,??DataTable1
   \   00000068   0x7548             STRB     R0,[R1, #+21]
   \   0000006A   0x2016             MOVS     R0,#+22
   \   0000006C   0xE01C             B.N      ??DataScope_Data_Generate_2
     68          		 case 6:   DataScope_OutPut_Buffer[25] = 25; return 26; break;
   \                     ??DataScope_Data_Generate_10: (+1)
   \   0000006E   0x2019             MOVS     R0,#+25
   \   00000070   0x....             LDR.N    R1,??DataTable1
   \   00000072   0x7648             STRB     R0,[R1, #+25]
   \   00000074   0x201A             MOVS     R0,#+26
   \   00000076   0xE017             B.N      ??DataScope_Data_Generate_2
     69          		 case 7:   DataScope_OutPut_Buffer[29] = 29; return 30; break;
   \                     ??DataScope_Data_Generate_9: (+1)
   \   00000078   0x201D             MOVS     R0,#+29
   \   0000007A   0x....             LDR.N    R1,??DataTable1
   \   0000007C   0x7748             STRB     R0,[R1, #+29]
   \   0000007E   0x201E             MOVS     R0,#+30
   \   00000080   0xE012             B.N      ??DataScope_Data_Generate_2
     70          		 case 8:   DataScope_OutPut_Buffer[33] = 33; return 34; break;
   \                     ??DataScope_Data_Generate_12: (+1)
   \   00000082   0x2021             MOVS     R0,#+33
   \   00000084   0x....             LDR.N    R1,??DataTable1
   \   00000086   0xF881 0x0021      STRB     R0,[R1, #+33]
   \   0000008A   0x2022             MOVS     R0,#+34
   \   0000008C   0xE00C             B.N      ??DataScope_Data_Generate_2
     71          		 case 9:   DataScope_OutPut_Buffer[37] = 37; return 38; break;
   \                     ??DataScope_Data_Generate_11: (+1)
   \   0000008E   0x2025             MOVS     R0,#+37
   \   00000090   0x....             LDR.N    R1,??DataTable1
   \   00000092   0xF881 0x0025      STRB     R0,[R1, #+37]
   \   00000096   0x2026             MOVS     R0,#+38
   \   00000098   0xE006             B.N      ??DataScope_Data_Generate_2
     72               case 10:  DataScope_OutPut_Buffer[41] = 41; return 42; break;
   \                     ??DataScope_Data_Generate_13: (+1)
   \   0000009A   0x2029             MOVS     R0,#+41
   \   0000009C   0x....             LDR.N    R1,??DataTable1
   \   0000009E   0xF881 0x0029      STRB     R0,[R1, #+41]
   \   000000A2   0x202A             MOVS     R0,#+42
   \   000000A4   0xE000             B.N      ??DataScope_Data_Generate_2
     73             }	 
     74            }
     75          	return 0;
   \                     ??DataScope_Data_Generate_4: (+1)
   \   000000A6   0x2000             MOVS     R0,#+0
   \                     ??DataScope_Data_Generate_2: (+1)
   \   000000A8   0x4770             BX       LR               ;; return
     76          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     DataScope_OutPut_Buffer
     77          
     78          
     79          
     80          
     81          
     82          
     83          
     84          
     85          
     86          
     87          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   DataScope_Data_Generate
       8   DataScope_Get_Channel_Data
         8   -> Float2Byte
       4   Float2Byte


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
     170  DataScope_Data_Generate
     174  DataScope_Get_Channel_Data
      44  DataScope_OutPut_Buffer
      36  Float2Byte

 
  44 bytes in section .bss
 384 bytes in section .text
 
 384 bytes of CODE memory
  44 bytes of DATA memory

Errors: none
Warnings: none

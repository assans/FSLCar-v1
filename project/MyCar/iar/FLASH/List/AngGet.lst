###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        26/Oct/2014  17:10:50
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\Freescale Code\FSLCar v1\project\MyCar\app\AngGet.c
#    Command line =  
#        "H:\Freescale Code\FSLCar v1\project\MyCar\app\AngGet.c" -D LPLD_K60
#        -lCN "H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\List\" -lB
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\List\" -o
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M4 -e --fpu=None
#        --dlib_config "H:\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\app\" -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\CPU\" -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\common\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\HW\" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\LPLD\DEV\"
#        -I "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\uCOS-II\Ports\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "H:\Freescale Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\FatFs\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\FatFs\option\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\USB\common\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\USB\driver\" -I "H:\Freescale
#        Code\FSLCar v1\project\MyCar\iar\..\..\..\lib\USB\descriptor\" -I
#        "H:\Freescale Code\FSLCar
#        v1\project\MyCar\iar\..\..\..\lib\USB\class\" -Ol -I "H:\Embedded
#        Workbench 7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\List\AngGet.lst
#    Object file  =  
#        H:\Freescale Code\FSLCar v1\project\MyCar\iar\FLASH\Obj\AngGet.o
#
###############################################################################

H:\Freescale Code\FSLCar v1\project\MyCar\app\AngGet.c
      1          #include "AngGet.h"
      2          #include "common.h"
      3          #include "Kalman.h"
      4          #include "complement.h"
      5          #define GRAVITY_OFFSET     2130
      6          #define VOLTAGE_GRAVITY   Angle_AD[0]  //加速度x
      7          #define VOLTAGE_GYRO      Angle_AD[1]  //陀螺仪
      8          #define CAR_ANGLE_RANGE	   180     //车辆角度范围
      9          #define GRAVITY_MAX        3370//重力最大值
     10          #define GRAVITY_MIN        963//重力最小值
     11          #define GRAVITY_ANGLE_RATIO	((float)CAR_ANGLE_RANGE / (float)((GRAVITY_MAX - GRAVITY_MIN)) )  //这一行需要优化
     12          #define GYROSCOPE_OFFSET 1606
     13          #define GYROSCOPE_ANGLE_RATIO   0.004// (3300/4096)/(0.67*5.1)*(3.14/180) =
     14          
     15          //extern int GyroZero;
     16          //extern int GravityZero;
     17          extern float CarAngle,CarAngSpeed,x_f;
     18          extern float angle_com,angle_dot_com;

   \                                 In section .bss, align 4
     19          int Angle_AD[2]={0,0};
   \                     Angle_AD:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     20          float GravityAngle,GyroscopeAngleSpeed;
   \                     GravityAngle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     GyroscopeAngleSpeed:
   \   00000000                      DS8 4
     21          

   \                                 In section .text, align 2, keep-with-next
     22          void AngleCalculate(void)
     23          {
   \                     AngleCalculate: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     24          	GravityAngle = ((VOLTAGE_GRAVITY - GRAVITY_OFFSET) * GRAVITY_ANGLE_RATIO);
   \   00000002   0x....             LDR.N    R0,??DataTable1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF6A0 0x0052      SUBW     R0,R0,#+2130
   \   0000000A   0x.... 0x....      BL       __aeabi_i2f
   \   0000000E   0x....             LDR.N    R1,??DataTable1_1  ;; 0x3d99273f
   \   00000010   0x.... 0x....      BL       __aeabi_fmul
   \   00000014   0x....             LDR.N    R1,??DataTable1_2
   \   00000016   0x6008             STR      R0,[R1, #+0]
     25          	GyroscopeAngleSpeed = ((VOLTAGE_GYRO - GYROSCOPE_OFFSET) * GYROSCOPE_ANGLE_RATIO);
   \   00000018   0x....             LDR.N    R0,??DataTable1
   \   0000001A   0x6840             LDR      R0,[R0, #+4]
   \   0000001C   0xF2A0 0x6046      SUBW     R0,R0,#+1606
   \   00000020   0x.... 0x....      BL       __aeabi_i2d
   \   00000024   0x....             LDR.N    R2,??DataTable1_3  ;; 0xd2f1a9fc
   \   00000026   0x....             LDR.N    R3,??DataTable1_4  ;; 0x3f70624d
   \   00000028   0x.... 0x....      BL       __aeabi_dmul
   \   0000002C   0x.... 0x....      BL       __aeabi_d2f
   \   00000030   0x....             LDR.N    R1,??DataTable1_5
   \   00000032   0x6008             STR      R0,[R1, #+0]
     26          
     27          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     28          void AngleGet(void)
     29          {
   \                     AngleGet: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     30          	Angle_AD[0]=LPLD_ADC_Get(ADC1,AD10); //采集x轴加速度
   \   00000002   0x210A             MOVS     R1,#+10
   \   00000004   0x....             LDR.N    R0,??DataTable1_6  ;; 0x400bb000
   \   00000006   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000000A   0x....             LDR.N    R1,??DataTable1
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     31          	Angle_AD[1]=LPLD_ADC_Get(ADC1,AD14); //采集陀螺仪角速度
   \   0000000E   0x210E             MOVS     R1,#+14
   \   00000010   0x....             LDR.N    R0,??DataTable1_6  ;; 0x400bb000
   \   00000012   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000016   0x....             LDR.N    R1,??DataTable1
   \   00000018   0x6048             STR      R0,[R1, #+4]
     32          	AngleCalculate();
   \   0000001A   0x.... 0x....      BL       AngleCalculate
     33          	//Kalman_Filter(GravityAngle,GyroscopeAngleSpeed);
     34          
     35          //	CarAngSpeed=angle_dot;
     36          //	CarAngle=angle;
     37          	complement_filter(GravityAngle,GyroscopeAngleSpeed);
   \   0000001E   0x....             LDR.N    R0,??DataTable1_5
   \   00000020   0x6801             LDR      R1,[R0, #+0]
   \   00000022   0x....             LDR.N    R0,??DataTable1_2
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x.... 0x....      BL       complement_filter
     38          	x_f=GravityAngle;
   \   0000002A   0x....             LDR.N    R0,??DataTable1_2
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x....             LDR.N    R1,??DataTable1_7
   \   00000030   0x6008             STR      R0,[R1, #+0]
     39          
     40          }
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
     41          
     42          //int GyroScopeGetZero(void)
     43          //{
     44          //	int temp;
     45          //	temp=Angle_AD[1]=LPLD_ADC_Get(ADC1,AD14);
     46          //	return temp;
     47          //}
     48          //int GravityGetZero(void)
     49          //{
     50          //	int temp;
     51          //	temp=Angle_AD[0]=LPLD_ADC_Get(ADC1,AD12);
     52          //	return temp;
     53          //}
     54          
     55          
     56          //函数说明：将单精度浮点数据转成4字节数据并存入指定地址
     57          //附加说明：用户无需直接操作此函数
     58          //target:目标单精度数据
     59          //buf:待写入数组
     60          //beg:指定从数组第几个元素开始写入
     61          //函数无返回

   \                                 In section .text, align 2, keep-with-next
     62          void Float2Byte(float *target,unsigned char *buf,unsigned char beg)
     63          {
   \                     Float2Byte: (+1)
   \   00000000   0xB410             PUSH     {R4}
     64              unsigned char *point;
     65              point = (unsigned char*)target;	  //得到float的地址
     66              buf[beg]   = point[0];
   \   00000002   0x7803             LDRB     R3,[R0, #+0]
   \   00000004   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000006   0x5453             STRB     R3,[R2, R1]
     67              buf[beg+1] = point[1];
   \   00000008   0x7843             LDRB     R3,[R0, #+1]
   \   0000000A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000C   0x1854             ADDS     R4,R2,R1
   \   0000000E   0x7063             STRB     R3,[R4, #+1]
     68              buf[beg+2] = point[2];
   \   00000010   0x7883             LDRB     R3,[R0, #+2]
   \   00000012   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000014   0x1854             ADDS     R4,R2,R1
   \   00000016   0x70A3             STRB     R3,[R4, #+2]
     69              buf[beg+3] = point[3];
   \   00000018   0x78C0             LDRB     R0,[R0, #+3]
   \   0000001A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000001C   0x1851             ADDS     R1,R2,R1
   \   0000001E   0x70C8             STRB     R0,[R1, #+3]
     70          }
   \   00000020   0xBC10             POP      {R4}
   \   00000022   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Angle_AD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x3D99273F         DC32     0x3d99273f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     GravityAngle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0xD2F1A9FC         DC32     0xd2f1a9fc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x3F70624D         DC32     0x3f70624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     GyroscopeAngleSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     x_f

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   AngleCalculate
         8   -> __aeabi_d2f
         8   -> __aeabi_dmul
         8   -> __aeabi_fmul
         8   -> __aeabi_i2d
         8   -> __aeabi_i2f
       8   AngleGet
         8   -> AngleCalculate
         8   -> LPLD_ADC_Get
         8   -> complement_filter
       4   Float2Byte


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
      54  AngleCalculate
      52  AngleGet
       8  Angle_AD
      36  Float2Byte
       4  GravityAngle
       4  GyroscopeAngleSpeed

 
  16 bytes in section .bss
 174 bytes in section .text
 
 174 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: none
